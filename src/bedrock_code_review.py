import boto3
import json
import os

# Load the Bedrock client
bedrock_client = boto3.client('bedrock', region_name=os.getenv('AWS_REGION'))

def generate_prompt(code_file, recommendations):
    """Generate the Llama 3 prompt based on the CodeGuru recommendations."""
    with open(code_file, 'r') as file:
        original_code = file.read()

    prompt = f"Here is the original code:\n\n{original_code}\n\n"
    prompt += "I want you to only make the changes based on the following CodeGuru recommendations:\n"

    for rec in recommendations['RecommendationSummaries']:
        filepath = rec['FilePath']
        if filepath == code_file:
            start_line = rec['StartLine']
            end_line = rec['EndLine']
            description = rec['Description']
            prompt += f"\n- From line {start_line} to {end_line}: {description}"

    prompt += "\n\nPlease correct the code according to these recommendations without making unnecessary changes."
    return prompt

def invoke_llama3(prompt):
    """Invoke Llama 3 via Bedrock and return the corrected code."""
    response = bedrock_client.invoke_model(
        modelId='llama3',  # Use the appropriate model ID for Llama 3 on Bedrock
        prompt=prompt,
        max_tokens=5000,  # Adjust token limit as per your use case
        temperature=0.7
    )

    return response['body']['text']  # Extract the corrected text

def apply_fixes_to_code(code_file, recommendations):
    """Generate the Llama 3 prompt and apply fixes to the code."""
    # Generate the Llama 3 prompt
    prompt = generate_prompt(code_file, recommendations)

    print("Prompt sent to Llama 3:")
    print(prompt)

    # Get the corrected code from Llama 3
    corrected_code = invoke_llama3(prompt)

    print("Corrected code generated by Llama 3:")
    print(corrected_code)

    # Write the corrected code back to the original file
    with open(code_file, 'w') as f:
        f.write(corrected_code)

def main():
    # Load the CodeGuru results
    with open('codeguru_results.json', 'r') as f:
        recommendations = json.load(f)

    code_file = 'src/main/java/com/shipmentEvents/handlers/EventHandler.java'
    apply_fixes_to_code(code_file, recommendations)

if __name__ == "__main__":
    main()

